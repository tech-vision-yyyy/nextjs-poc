variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  npm_config_cache: $(Pipeline.Workspace)/.npm

pool:
  vmImage: ubuntu-latest

steps:
  - checkout: self
    path: nextjs-graphcms-poc

  - script: vercel --version
    displayName: "Vercel Version"

  - script: vercel link --token $(VERCEL_SECRET) --confirm
    displayName: "Vercel Project Linking"

  - script: vercel --token $(VERCEL_SECRET) --prod .
    condition: and(succeeded(), eq(variables.isMain, 'True'))
    displayName: "Deploy to Vercel"

  - script: vercel --token $(VERCEL_SECRET) . > deployment-url.txt
    condition: and(succeeded(), eq(variables.isMain, 'False'))
    displayName: "Deploy to Vercel"

  - script: echo $(cat deployment-url.txt)
    condition: and(succeeded(), eq(variables.isMain, 'False'))
    displayName: "Print the Vercel Preview URL"

  - task: Cache@2
    condition: and(succeeded(), eq(variables.isMain, 'False'))
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(npm_config_cache)
    displayName: Cache npm

  - script: npm ci
    condition: and(succeeded(), eq(variables.isMain, 'False'))
    displayName: "Install dependencies"

  - script: CYPRESS_BASE_URL=$(cat deployment-url.txt) CYPRESS_RECORD_KEY=$(CYPRESS_RECORD_KEY) npm run cy:run-and-record
    condition: and(succeeded(), eq(variables.isMain, 'False'))
    displayName: "Run the Cypress Integration Tests"
